
#### Bash Scripting : Get Started 

What is Bash Scripting?
    Bash scripting involves writing a sequence of commands in a file to automate tasks. Scripts are executed by the Bash shell, which interprets the commands.

Steps to Get Started

    Step 1: Create a Script:
            We can use VS code and simple text editor
            file rename as script.sh
    step 2: Write Basic Commands:
            Start the script with a shebang (#!/bin/bash), indicating it's a Bash script.
            #!/bin/bash
            echo "Hello, World!"

    Step3: Make the Script Executable:
            Run: chmod +x script.sh
    Step 4: Execute the Script:
            ./script.sh


##### Variable

a> system defined

if variale is capital letter then are system defined most likely e.g.
    echo $BASH
    echo $PWD

b> user deifine
    name=Vipul 
    echo $name ( Vipul wil print)


# Accept the aruguments
 read 
 $echo $REPLY
 
 read name
 $echo name 

 read -p "Enter name :" name
 $echo name 

 read -sp "Enter Password :" pass
 $echo pass 

 read -a names
 echo "${arr[$i]}"

    

## List of all comparsion integer in bash shell

# Variables
a=10
b=20

# Equal to
if [ "$a" -eq "$b" ]; then
    echo "a equals b"
else
    echo "a does not equal b"
fi

# Not equal to
if [ "$a" -ne "$b" ]; then
    echo "a is not equal to b"
fi

# Greater than
if [ "$a" -gt "$b" ]; then
    echo "a is greater than b"
else
    echo "a is not greater than b"
fi

# Less than
if [ "$a" -lt "$b" ]; then
    echo "a is less than b"
fi

# Greater than or equal to
if [ "$a" -ge "$b" ]; then
    echo "a is greater than or equal to b"
fi

# Less than or equal to
if [ "$a" -le "$b" ]; then
    echo "a is less than or equal to b"
fi

# can be use like this 

if (($var1<=$var2)); then 
echo "var 1 is less than equal to var2"
fi



# some popualar flags


-e ---> this flag check whether the file exist or not
-f ---> if file exist anf regular file or not
-d ---> check the directory
-s ---> check if file empty of not
-w ---> to check if file has read to write permission or not
-r ---> to check if file has a read permisson


# files 
ls -al -> list down all the list of file in detail ( file persiona, name date, etc)
chmod +w file_name -> to give the write permission
chmod -w file_name -> to remove the write permission



### logical operator 

        #Logical AND Operator 

# way 1

# if [ $age -gt 18 ] && [ $age -lt 50 ]; then
# echo "you are eligible to vote"
# else
# echo " you are not eligile to vote"
# fi

# way 2

# if [ $age -gt 18 -a $age -lt 50 ];
# then 
# echo "you are eligible to vote"
# else
# echo " you are not eligible to vote"
# fi

# way 3

if [[ $age -gt 18 && $age -lt 50 ]];
then 
echo "you are eligible to vote"
else
echo " you are not eligible to vote"
fi      




                # Logical OR Operator

age=30

## way 1

# if [ $age -gt 18 ] || [ $age -lt 50 ]; then
# echo "you are eligible"
# else
# echo " you are not elgible"
# fi

## way 2

if [ $age -gt 18 -o $age -lt 50 ];
then 
echo "you are eligible to vote"
else
echo " you are not eligible to vote"
fi

## way 3

# if [[ $age -gt 18 || $age -lt 50 ]];
# then 
# echo "you are eligible to vote"
# else
# echo " you are not eligible to vote"
# fi
